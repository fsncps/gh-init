#!/usr/bin/env python3

import argparse
import os
import subprocess
from pathlib import Path

def run(cmd, check=True):
    subprocess.run(cmd, shell=True, check=check)

def main():
    parser = argparse.ArgumentParser(description="Initialize a local and remote GitHub repository.")
    parser.add_argument('-p', '--path', help='Local path to initialize (default: current dir)', default=os.getcwd())
    parser.add_argument('-n', '--name', help='Repository name (default: basename of path)', default=None)
    parser.add_argument('--no-gitignore', action='store_true', help='Skip creating .gitignore')
    parser.add_argument('--no-readme', action='store_true', help='Skip creating README.md')
    parser.add_argument('-P', '--public', action='store_true', help='Make the GitHub repo public')
    
    
    args = parser.parse_args()

    path = Path(args.path).resolve()
    repo_name = args.name or path.name
    username = subprocess.check_output("git config --global github.user", shell=True, text=True).strip()

    if not username:
        print("Error: 'github.user' not set in git config.")
        exit(1)

    path.mkdir(parents=True, exist_ok=True)
    os.chdir(path)

    run("git init")
    readme = path / "README.md"
    gitignore = path / ".gitignore"
    
    if not args.no_readme:
        if not readme.exists():
            readme.write_text(f"## {repo_name}\nNew repo\n\n---\n")
            run("git add README.md")

    if not args.no_gitignore:
        if not gitignore.exists():
            gitignore.write_text("""## default .gitignore
*.swp
*.swo
*.bak
*.tmp
*.log
.DS_Store
Thumbs.db
.env
node_modules/
dist/
__pycache__/
""")
            run("git add .gitignore")

    visibility = "--public" if args.public else "--private"
    run(f'gh repo create "{repo_name}" {visibility} --source=. --remote=origin')
    current_branch = subprocess.check_output("git symbolic-ref --short HEAD", shell=True, text=True).strip()
    if readme.exists() or gitignore.exists():
        run('git commit -m "Initial commit"')
        run(f"git push -u origin {current_branch}")

    print(f"Initialized GitHub repo '{username}/{repo_name}' in {path}")

if __name__ == "__main__":
    main()

